buildscript {
    dependencies {
        classpath "com.android.tools.build:gradle:2.1.3"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def params = rootProject.ext

def projectArtifactId = 'android-util-events'
def projectArtifactName = projectArtifactId

group = GROUP
version = params.projectVersion


dependencies {
    compile project(':common')
    compile group: 'com.squareup', name: 'otto', version: '1.3.8'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

android {
    compileSdkVersion params.compileSdkVersion
    buildToolsVersion params.buildToolsVersion

    defaultConfig {
        versionName params.projectVersion
        versionCode params.projectVersionCode
        minSdkVersion params.minSdkVersion
        targetSdkVersion params.targetSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath = files(project.android.getBootClasspath())
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

publishing {
    publications {
        release(MavenPublication) {
            artifacts {
                artifactId projectArtifactId
                artifact bundleRelease
                artifact sourcesJar {
                    classifier 'sources'
                }
                artifact javadocJar {
                    classifier 'javadoc'
                }
            }
        }
        debug(MavenPublication) {
            artifacts {
                artifactId projectArtifactId
                artifact bundleDebug {
                    classifier 'debug'
                }
            }
        }
        // Configure POM for every publication
        all {
            pom.packaging 'aar'
            pom.withXml {
                asNode().appendNode('name', projectArtifactName)
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = getPropertyValue('bintray.user')
    key = getPropertyValue('bintray.key')
    publications = ['release', 'debug']
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'android-util'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/dshkil/android-util.git'
    }
}
